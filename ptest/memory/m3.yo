                            | # Execution begins at address 0 
0x000:                      | 	.pos 0 
0x000: 30f40003000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer  
0x00a: 801801000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Array of 32 elements
0x018:                      | 	.align 8
0x018: 0100000000000000     | array:	.quad 0x0000000000000001
0x020: 0200000000000000     | 	.quad 0x0000000000000002
0x028: 1000000000000000     |     .quad 0x0000000000000010
0x030: 0400000000000000     |     .quad 0x0000000000000004
0x038: 0001000000000000     |     .quad 0x0000000000000100
0x040: 0600000000000000     |     .quad 0x0000000000000006
0x048: 0010000000000000     |     .quad 0x0000000000001000
0x050: 0800000000000000     |     .quad 0x0000000000000008
0x058: 0000010000000000     |     .quad 0x0000000000010000
0x060: 0a00000000000000     |     .quad 0x000000000000000a
0x068: 0000100000000000     |     .quad 0x0000000000100000
0x070: 0c00000000000000     |     .quad 0x000000000000000c
0x078: 0000000100000000     |     .quad 0x0000000001000000
0x080: 0e00000000000000     |     .quad 0x000000000000000e
0x088: 0000001000000000     |     .quad 0x0000000010000000
0x090: 1100000000000000     |     .quad 0x0000000000000011
0x098: 0000000001000000     | 	.quad 0x0000000100000000
0x0a0: 3300000000000000     |     .quad 0x0000000000000033
0x0a8: 0000000010000000     |     .quad 0x0000001000000000
0x0b0: 5500000000000000     |     .quad 0x0000000000000055
0x0b8: 0000000000010000     |     .quad 0x0000010000000000
0x0c0: 7700000000000000     |     .quad 0x0000000000000077
0x0c8: 0000000000100000     |     .quad 0x0000100000000000
0x0d0: 9900000000000000     |     .quad 0x0000000000000099
0x0d8: 0000000000000100     |     .quad 0x0001000000000000
0x0e0: bb00000000000000     |     .quad 0x00000000000000bb
0x0e8: 0000000000001000     |     .quad 0x0010000000000000
0x0f0: dd00000000000000     |     .quad 0x00000000000000dd
0x0f8: 0000000000000001     |     .quad 0x0100000000000000
0x100: ff00000000000000     |     .quad 0x00000000000000ff
0x108: 0000000000000010     |     .quad 0x1000000000000000
0x110: b000000000000000     |     .quad 0x00000000000000b0
                            |     
                            | 
                            | 
0x118:                      | main:
0x118: 30f71800000000000000 |     irmovq array,%rdi
0x122: 30f62000000000000000 |     irmovq $32, %rsi
0x12c: 803601000000000000   |     call skip_sum
0x135: 90                   |     ret
                            | 
                            | 
                            | 
                            | 
                            | # long skip_sum(long *arr, int length)
                            | # Sum every other element in the array
0x136: 30f81000000000000000 | skip_sum:	irmovq $16,%r8        # Constant 16; go forward 2 quads each iteration
0x140: 30f90200000000000000 | 	irmovq $2,%r9	     # Constant 2; decrease remaining length by 2
0x14a: 6300                 | 	xorq %rax,%rax	     # sum = 0
0x14c: 6266                 | 	andq %rsi,%rsi	     # Set CC
0x14e: 706701000000000000   | 	jmp     test         # Goto test
0x157: 50a70000000000000000 | loop:	mrmovq (%rdi),%r10   # Get *start
0x161: 60a0                 | 	addq %r10,%rax       # Add to sum
0x163: 6087                 | 	addq %r8,%rdi        # start++
0x165: 6196                 | 	subq %r9,%rsi        # count--.  Set CC
0x167: 745701000000000000   | test:	jne    loop          # Stop when 0
0x170: 90                   | 	ret                  # Return
                            | 
                            | 
                            | # Stack starts here and grows to lower addresses
0x300:                      | 	.pos 0x300
0x300:                      | stack:
